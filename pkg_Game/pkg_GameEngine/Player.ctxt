#BlueJ class context
comment0.target=Player
comment0.text=\n\ Classe\ permettant\ la\ cr\u00E9ation\ de\ joueurs\ dans\ le\ jeu.\n\ Elle\ contient\ les\ m\u00E9thodes\ propres\ au\ joueur.\n\ @author\ Raphael\ CANIN\n\ @version\ 2020\n
comment1.params=pR
comment1.target=Player(pkg_Room.Room)
comment1.text=\n\ Contructeur\ de\ Player\n\ @param\ pR\ Room\ de\ d\u00E9part\n
comment10.params=
comment10.target=java.lang.String\ eatCookie()
comment10.text=\n\ Permet\ de\ manger\ un\ cookie\ et\ d'en\ appliquer\ les\ effets\n\ @return\ String\ d'information\ au\ joueur\n
comment11.params=pS
comment11.target=java.lang.String\ chargeBeamer(java.lang.String)
comment11.text=\n\ Permet\ de\ charger\ un\ Beamer\n\ @param\ pS\ Nom\ du\ beamer\n\ @return\ Sortie\ textuelle\ pour\ afficher\ au\ joueur\n
comment12.params=pS
comment12.target=java.lang.String\ fireBeamer(java.lang.String)
comment12.text=\n\ Permet\ de\ fire\ un\ Beamer\n\ @param\ pS\ Nom\ du\ beamer\n\ @return\ Sortie\ textuelle\ pour\ afficher\ au\ joueur\n
comment13.params=pDirection
comment13.target=java.lang.String\ lockedDoorProcess(java.lang.String)
comment13.text=\n\ Permet\ de\ traiter\ les\ cas\ o\u00F9\ le\ Player\ est\ face\ \u00E0\ une\ porte\ ferm\u00E9e\n\ @param\ pDirection\ Direction\ souhait\u00E9e\n\ @return\ Informations\ pour\ le\ joueur.\n
comment14.params=pC
comment14.target=java.lang.String\ solveRiddle(pkg_Command.Command)
comment14.text=\n\ Permet\ de\ commencer\ \u00E0\ r\u00E9soudre\ une\ \u00E9nigme\n\ @param\ pC\ Command\ commen\u00E7ant\ par\ solve\n\ @return\ Informations\ pour\ le\ joueur.\n
comment15.params=pC
comment15.target=java.lang.String\ guessRiddle(pkg_Command.Command)
comment15.text=\n\ Permet\ au\ Player\ de\ tenter\ des\ r\u00E9ponses\ \u00E0\ l'\u00E9nigme\ courante.\n\ @param\ pC\ Command\ commen\u00E7ant\ par\ guess\n\ @return\ Informations\ pour\ le\ joueur.\n
comment16.params=pWalter
comment16.target=java.lang.String\ healWalter(Walter)
comment16.text=\n\ Permet\ de\ soigner\ Walter,\ d'activer\ le\ combat\ et\ de\ renvoyer\ son\ discours.\n\ @param\ pWalter\ Walter\ \u00E0\ soigner\n\ @return\ Informations\ pour\ le\ joueur.\n
comment17.params=
comment17.target=java.lang.String\ fightMonster()
comment17.text=\n\ Permet\ de\ combattre\ le\ monstre\n\ @return\ Informations\ pour\ le\ joueur.\n
comment18.params=
comment18.target=boolean\ hasWon()
comment18.text=\n\ Getter\ de\ aHasWon\n\ @return\ true\ si\ le\ joueur\ a\ gagn\u00E9,\ false\ sinon.\n
comment2.params=
comment2.target=pkg_Room.Room\ getCurrentRoom()
comment2.text=\n\ @return\ aCurrentRoom\n\ getter\ de\ aCurrentRoom\n
comment3.params=pR
comment3.target=void\ setCurrentRoom(pkg_Room.Room)
comment3.text=\n\ @param\ pR\n\ Setter\ de\ aCurrentRoom\n
comment4.params=pNextRoom
comment4.target=void\ walk(pkg_Room.Room)
comment4.text=\n\ @param\ pNextRoom\ Room\ de\ destination\n\ Permet\ au\ joueur\ de\ se\ d\u00E9placer\ dans\ la\ bonne\ pi\u00E8ce\n
comment5.params=
comment5.target=void\ walkback()
comment5.text=\n\ Retour\ dans\ la\ pi\u00E8ce\ pr\u00E9c\u00E9dente\n
comment6.params=
comment6.target=boolean\ cantGoBack()
comment6.text=\n\ On\ v\u00E9rifie\ s'il\ reste\ des\ pi\u00E8ces\ stock\u00E9es\ pour\ revenir\ en\ arri\u00E8re\n\ @return\ boolean\ false\ s'il\ reste\ des\ pi\u00E8ces\ dans\ la\ pile\ ou\ si\ la\ Room\ au\ sommet\ de\n\ la\ pile\ n'est\ pas\ une\ sortie\ de\ la\ Room\ actuelle,\ true\ sinon\n
comment7.params=pItemName
comment7.target=java.lang.String\ takeItem(java.lang.String)
comment7.text=\n\ Prendre\ un\ Item\n\ @param\ pItemName\ Nom\ de\ l'Item\ \u00E0\ ramasser\n\ @return\ Message\ \u00E0\ afficher\n
comment8.params=pItemName
comment8.target=java.lang.String\ dropItem(java.lang.String)
comment8.text=\n\ D\u00E9poser\ un\ Item\n\ @param\ pItemName\ Nom\ de\ l'Item\ \u00E0\ d\u00E9poser\n\ @return\ Message\ \u00E0\ afficher\ au\ joueur\n
comment9.params=
comment9.target=java.lang.String\ getInventoryInfo()
comment9.text=\n\ Infos\ sur\ l'inventaire\n\ @return\ String\ contenant\ les\ infos\ sur\ l'inventaire\n
numComments=19
